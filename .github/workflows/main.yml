name: Full CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install root dependencies
      run: npm ci

    - name: Install client dependencies
      run: |
        cd client
        npm ci

    - name: Run client tests
      run: |
        cd client
        npm test -- --watchAll=false

    - name: Install server dependencies
      run: |
        cd server
        npm ci

    - name: Create .env for server
      run: |
        cd server
        echo "PORT=5001" > .env
        echo "MONGO_URI=mongodb://localhost:27017/booking_system" >> .env
        echo "JWT_SECRET=supersecretkey123" >> .env
        echo "NODE_ENV=ci" >> .env

    - name: Run server tests
      run: |
        cd server
        node --experimental-vm-modules ../node_modules/jest/bin/jest.js

    - name: Start server in background
      run: |
        cd server
        nohup node server.js > server.log 2>&1 &

    - name: Wait until server is ready
      run: |
        for i in {1..15}; do
          echo "⏳ Waiting for server (attempt $i)..."
          curl --silent --fail http://localhost:5001/health && echo "✅ Server is up!" && exit 0
          sleep 2
        done
        echo "❌ Server did not start in time. Printing server log:"
        cat server/server.log
        exit 1

    - name: Run API tests with Newman
      uses: anthonyvscode/newman-action@v1
      with:
        collection: ./postman/collection.json
        environment: ./postman/environment.json

  security-scan:
    needs: install-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run npm audit
      run: |
        npm audit || true
        cd client && npm audit || true
        cd ../server && npm audit || true

  docker-build-push:
    needs: security-scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and tag client image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/spacehub-client:latest ./client

    - name: Build and tag server image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/spacehub-server:latest ./server

    - name: Push client image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/spacehub-client:latest

    - name: Push server image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/spacehub-server:latest
